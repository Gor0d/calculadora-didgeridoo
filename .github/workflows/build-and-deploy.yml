name: 🚀 Build & Deploy Didgemap

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Tipo de build'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - production
        - web-only

jobs:
  quality-check:
    name: 🔍 Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📲 Install dependencies
        run: npm ci

      - name: 🧹 Lint check
        run: npm run lint:check
        continue-on-error: true

      - name: 💅 Format check
        run: npm run format:check
        continue-on-error: true

      - name: 🧪 Run tests
        run: npm run test:ci
        continue-on-error: true

  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📲 Install dependencies
        run: npm ci

      - name: 🌐 Build web
        run: npm run build:web:prod

      - name: 📤 Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/

      - name: 🚀 Deploy to Vercel
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./build

  build-android:
    name: 📱 Build Android
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event.inputs.build_type != 'web-only'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📲 Install dependencies
        run: npm ci

      - name: 🏗️ Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📱 Build Android APK (Preview)
        if: github.event.inputs.build_type == 'preview' || github.event_name != 'workflow_dispatch'
        run: npx eas build --platform android --profile preview --non-interactive

      - name: 📦 Build Android (Production)
        if: github.event.inputs.build_type == 'production'
        run: npx eas build --platform android --profile production --non-interactive

  build-ios:
    name: 🍎 Build iOS
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event.inputs.build_type == 'production'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📲 Install dependencies
        run: npm ci

      - name: 🏗️ Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🍎 Build iOS
        run: npx eas build --platform ios --profile production --non-interactive

  update-ota:
    name: 🔄 OTA Update
    runs-on: ubuntu-latest
    needs: [quality-check]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📲 Install dependencies
        run: npm ci

      - name: 🏗️ Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🔄 Publish OTA Update
        run: |
          npx eas update --branch production --message "Auto update: ${{ github.event.head_commit.message }}"

  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [build-web, build-android, build-ios, update-ota]
    if: always()
    steps:
      - name: 📢 Summary
        run: |
          echo "### 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Web Build: ${{ needs.build-web.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Android Build: ${{ needs.build-android.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- iOS Build: ${{ needs.build-ios.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- OTA Update: ${{ needs.update-ota.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Links úteis:**" >> $GITHUB_STEP_SUMMARY
          echo "- [Expo Dashboard](https://expo.dev/accounts/[username]/projects/didgemap-calculadora)" >> $GITHUB_STEP_SUMMARY
          echo "- [Vercel Dashboard](https://vercel.com/dashboard)" >> $GITHUB_STEP_SUMMARY